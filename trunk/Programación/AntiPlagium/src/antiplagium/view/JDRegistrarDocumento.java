package antiplagium.view;

import antiplagium.BE.CategoriaBE;
import antiplagium.BE.DocumentoBE;
import antiplagium.BE.UsuarioBE;
import antiplagium.BE.Utilitario;
import antiplagium.BL.DocumentoBL;
import antiplagium.DAO.CategoriaDAO;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import org.freixas.jcalendar.JCalendarCombo;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDRegistrarDocumento.java
 *
 * Created on 03/06/2010, 07:42:51 PM
 */
/**
 *
 * @author a20062010
 */
public class JDRegistrarDocumento extends javax.swing.JDialog {

    private JCalendarCombo cmbFechaInicio;
    private UsuarioBE objUsuarioBE;
    private CategoriaBE objCategoriaBE;
    private UsuarioBE objUsuario;
    private DocumentoBE objDocumento;
    private ArrayList<CategoriaBE> alstCategorias;
    /** Creates new form JDRegistrarDocumento */
    public JDRegistrarDocumento(UsuarioBE objUsuario, ArrayList<CategoriaBE> listaCategorias) {
        cmbFechaInicio = new JCalendarCombo();
        initComponents();
        this.objUsuario = objUsuario;
        txtPropietario.setText(this.objUsuario.getNombres());
        cmbFechaInicio.setSize(220, 25);
        cmbFechaInicio.setDate(new Date());
        cmbFechaInicio.setEditable(false);
        pnlFecha.add(cmbFechaInicio);
        pnlFecha.setEnabled(false);
        pnlFecha.setVisible(false);
        lblFecha.setVisible(false);
        cboCategoria.removeAllItems();
        alstCategorias = listaCategorias;
        /* Eliminamos el Todas */
        alstCategorias.remove(0);
        for (int i = 0; i < alstCategorias.size(); ++i) {
            cboCategoria.addItem(alstCategorias.get(i));
        }
    }

    private void cargarArchivo(int numDoc, String nomArch) {
        switch (numDoc) {
            case 1:
                txtRuta11.setText(nomArch);
                break;
            case 2:
                txtRuta22.setText(nomArch);
                break;
            case 3:
                txtRuta33.setText(nomArch);
                break;
            case 4:
                txtRuta44.setText(nomArch);
                break;
            case 5:
                txtRuta55.setText(nomArch);
                break;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    /**
     * @param args the command line arguments
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDatosParticulares = new javax.swing.JPanel();
        txtPropietario = new javax.swing.JTextField();
        lblPropietario = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblCategoria = new javax.swing.JLabel();
        cboCategoria = new javax.swing.JComboBox();
        pnlFecha = new javax.swing.JPanel();
        pnlDatosGen = new javax.swing.JPanel();
        txtNombreDoc1 = new javax.swing.JTextField();
        lblNombre1 = new javax.swing.JLabel();
        lblRuta11 = new javax.swing.JLabel();
        txtRuta11 = new javax.swing.JTextField();
        btnBuscar1 = new javax.swing.JButton();
        lblNombre2 = new javax.swing.JLabel();
        txtNombreDoc2 = new javax.swing.JTextField();
        lblRuta22 = new javax.swing.JLabel();
        txtRuta22 = new javax.swing.JTextField();
        lblNombre3 = new javax.swing.JLabel();
        txtNombreDoc3 = new javax.swing.JTextField();
        lblRuta33 = new javax.swing.JLabel();
        txtRuta33 = new javax.swing.JTextField();
        lblNombre4 = new javax.swing.JLabel();
        txtNombreDoc4 = new javax.swing.JTextField();
        lblRuta44 = new javax.swing.JLabel();
        txtRuta44 = new javax.swing.JTextField();
        lblNombre5 = new javax.swing.JLabel();
        txtNombreDoc5 = new javax.swing.JTextField();
        lblRuta55 = new javax.swing.JLabel();
        txtRuta55 = new javax.swing.JTextField();
        btnBuscar2 = new javax.swing.JButton();
        btnBuscar3 = new javax.swing.JButton();
        btnBuscar4 = new javax.swing.JButton();
        btnBuscar5 = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnCargarDirectorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        pnlDatosParticulares.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos particulares", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.blue)); // NOI18N

        txtPropietario.setEditable(false);

        lblPropietario.setText("Propietario:");

        lblFecha.setText("Fecha:");

        lblCategoria.setText("Categor√≠a:");

        javax.swing.GroupLayout pnlFechaLayout = new javax.swing.GroupLayout(pnlFecha);
        pnlFecha.setLayout(pnlFechaLayout);
        pnlFechaLayout.setHorizontalGroup(
            pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        pnlFechaLayout.setVerticalGroup(
            pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlDatosParticularesLayout = new javax.swing.GroupLayout(pnlDatosParticulares);
        pnlDatosParticulares.setLayout(pnlDatosParticularesLayout);
        pnlDatosParticularesLayout.setHorizontalGroup(
            pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosParticularesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPropietario)
                    .addComponent(lblCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addGap(61, 61, 61)
                .addComponent(lblFecha)
                .addGap(18, 18, 18)
                .addComponent(pnlFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(273, Short.MAX_VALUE))
        );
        pnlDatosParticularesLayout.setVerticalGroup(
            pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosParticularesLayout.createSequentialGroup()
                .addGroup(pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlFecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPropietario)
                        .addComponent(txtPropietario)
                        .addComponent(lblFecha)))
                .addGap(23, 23, 23)
                .addGroup(pnlDatosParticularesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoria)
                    .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlDatosGen.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos generales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.Color.blue)); // NOI18N

        lblNombre1.setText("Nombre:");

        lblRuta11.setText("Ruta:");

        txtRuta11.setEnabled(false);

        btnBuscar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar1ActionPerformed(evt);
            }
        });

        lblNombre2.setText("Nombre:");

        lblRuta22.setText("Ruta:");

        txtRuta22.setEnabled(false);

        lblNombre3.setText("Nombre:");

        lblRuta33.setText("Ruta:");

        txtRuta33.setEnabled(false);

        lblNombre4.setText("Nombre:");

        lblRuta44.setText("Ruta:");

        txtRuta44.setEnabled(false);

        lblNombre5.setText("Nombre:");

        lblRuta55.setText("Ruta:");

        txtRuta55.setEnabled(false);

        btnBuscar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar2ActionPerformed(evt);
            }
        });

        btnBuscar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar3ActionPerformed(evt);
            }
        });

        btnBuscar4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar4ActionPerformed(evt);
            }
        });

        btnBuscar5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscar5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDatosGenLayout = new javax.swing.GroupLayout(pnlDatosGen);
        pnlDatosGen.setLayout(pnlDatosGenLayout);
        pnlDatosGenLayout.setHorizontalGroup(
            pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosGenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(lblNombre1)
                        .addGap(26, 26, 26)
                        .addComponent(txtNombreDoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRuta11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRuta11, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(lblNombre2)
                        .addGap(26, 26, 26)
                        .addComponent(txtNombreDoc2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRuta22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRuta22, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar2))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(lblNombre3)
                        .addGap(26, 26, 26)
                        .addComponent(txtNombreDoc3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRuta33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRuta33, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar3))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(lblNombre4)
                        .addGap(26, 26, 26)
                        .addComponent(txtNombreDoc4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRuta44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRuta44, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar4))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(lblNombre5)
                        .addGap(26, 26, 26)
                        .addComponent(txtNombreDoc5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRuta55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtRuta55, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscar5)))
                .addContainerGap(269, Short.MAX_VALUE))
        );
        pnlDatosGenLayout.setVerticalGroup(
            pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosGenLayout.createSequentialGroup()
                .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreDoc1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(lblNombre1)
                            .addComponent(lblRuta11)
                            .addComponent(txtRuta11))
                        .addGap(23, 23, 23))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(btnBuscar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreDoc2, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(lblNombre2)
                            .addComponent(lblRuta22)
                            .addComponent(txtRuta22))
                        .addGap(23, 23, 23))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(btnBuscar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreDoc3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(lblNombre3)
                            .addComponent(lblRuta33)
                            .addComponent(txtRuta33))
                        .addGap(23, 23, 23))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(btnBuscar3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreDoc4, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(lblNombre4)
                            .addComponent(lblRuta44)
                            .addComponent(txtRuta44))
                        .addGap(23, 23, 23))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(btnBuscar4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addGroup(pnlDatosGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreDoc5, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                            .addComponent(lblNombre5)
                            .addComponent(lblRuta55)
                            .addComponent(txtRuta55))
                        .addGap(44, 44, 44))
                    .addGroup(pnlDatosGenLayout.createSequentialGroup()
                        .addComponent(btnBuscar5)
                        .addContainerGap())))
        );

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setMaximumSize(new java.awt.Dimension(135, 35));
        btnAceptar.setMinimumSize(new java.awt.Dimension(135, 35));
        btnAceptar.setPreferredSize(new java.awt.Dimension(135, 35));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setMaximumSize(new java.awt.Dimension(135, 35));
        btnCancelar.setMinimumSize(new java.awt.Dimension(135, 35));
        btnCancelar.setPreferredSize(new java.awt.Dimension(135, 35));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setMaximumSize(new java.awt.Dimension(135, 35));
        btnLimpiar.setMinimumSize(new java.awt.Dimension(135, 35));
        btnLimpiar.setPreferredSize(new java.awt.Dimension(135, 35));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnCargarDirectorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cargar.png"))); // NOI18N
        btnCargarDirectorio.setText("Carga Masiva");
        btnCargarDirectorio.setMaximumSize(new java.awt.Dimension(135, 35));
        btnCargarDirectorio.setMinimumSize(new java.awt.Dimension(135, 35));
        btnCargarDirectorio.setPreferredSize(new java.awt.Dimension(135, 35));
        btnCargarDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDirectorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCargarDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, Short.MAX_VALUE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlDatosGen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDatosParticulares, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(pnlDatosParticulares, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlDatosGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar1ActionPerformed
        JFileChooser fchooser = new JFileChooser();
        fchooser.setApproveButtonText("Cargar");
        ExtensionValida ext = new ExtensionValida(false);
        fchooser.setFileFilter(ext);
        fchooser.setAcceptAllFileFilterUsed(false);
        int retVal = fchooser.showOpenDialog(this);
        if (retVal == fchooser.APPROVE_OPTION) {
            String nomArch = fchooser.getSelectedFile().getAbsolutePath();
            txtNombreDoc1.setText(fchooser.getSelectedFile().getName());
            cargarArchivo(1, nomArch);
        }
}//GEN-LAST:event_btnBuscar1ActionPerformed

    private void btnBuscar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar2ActionPerformed
        JFileChooser fchooser = new JFileChooser();
        fchooser.setApproveButtonText("Cargar");
        ExtensionValida ext = new ExtensionValida(false);
        fchooser.setFileFilter(ext);
        fchooser.setAcceptAllFileFilterUsed(false);
        int retVal = fchooser.showOpenDialog(this);
        if (retVal == fchooser.APPROVE_OPTION) {
            String nomArch = fchooser.getSelectedFile().getAbsolutePath();
            txtNombreDoc2.setText(fchooser.getSelectedFile().getName());
            cargarArchivo(2, nomArch);
        }
    }//GEN-LAST:event_btnBuscar2ActionPerformed

    private void btnBuscar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar3ActionPerformed
        JFileChooser fchooser = new JFileChooser();
        fchooser.setApproveButtonText("Cargar");
        ExtensionValida ext = new ExtensionValida(false);
        fchooser.setFileFilter(ext);
        fchooser.setAcceptAllFileFilterUsed(false);
        int retVal = fchooser.showOpenDialog(this);
        if (retVal == fchooser.APPROVE_OPTION) {
            String nomArch = fchooser.getSelectedFile().getAbsolutePath();
            txtNombreDoc3.setText(fchooser.getSelectedFile().getName());
            cargarArchivo(3, nomArch);
        }
    }//GEN-LAST:event_btnBuscar3ActionPerformed

    private void btnBuscar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar4ActionPerformed
        JFileChooser fchooser = new JFileChooser();
        fchooser.setApproveButtonText("Cargar");
        ExtensionValida ext = new ExtensionValida(false);
        fchooser.setFileFilter(ext);
        fchooser.setAcceptAllFileFilterUsed(false);
        int retVal = fchooser.showOpenDialog(this);
        if (retVal == fchooser.APPROVE_OPTION) {
            String nomArch = fchooser.getSelectedFile().getAbsolutePath();
            txtNombreDoc4.setText(fchooser.getSelectedFile().getName());
            cargarArchivo(4, nomArch);
        }
    }//GEN-LAST:event_btnBuscar4ActionPerformed

    private void btnBuscar5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscar5ActionPerformed
        JFileChooser fchooser = new JFileChooser();
        ExtensionValida ext = new ExtensionValida(false);
        fchooser.setFileFilter(ext);
        fchooser.setApproveButtonText("Cargar");
        fchooser.setAcceptAllFileFilterUsed(false);
        int retVal = fchooser.showOpenDialog(this);
        if (retVal == fchooser.APPROVE_OPTION) {
            String nomArch = fchooser.getSelectedFile().getAbsolutePath();
            txtNombreDoc5.setText(fchooser.getSelectedFile().getName());
            cargarArchivo(5, nomArch);
        }
    }//GEN-LAST:event_btnBuscar5ActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        DocumentoBE doc1 = null, doc2 = null, doc3 = null, doc4 = null, doc5 = null;
        String resDoc1 = "";
        String resDoc2 = "";
        String resDoc3 = "";
        String resDoc4 = "";
        String resDoc5 = "";
        /* Validaci√≥n de nombres vacios */
        if (txtRuta11.getText().compareTo("") != 0 && txtNombreDoc1.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Se debe indicar un nombre para el archivo 1.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta22.getText().compareTo("") != 0 && txtNombreDoc2.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Se debe indicar un nombre para el archivo 2.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta33.getText().compareTo("") != 0 && txtNombreDoc3.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Se debe indicar un nombre para el archivo 3.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta44.getText().compareTo("") != 0 && txtNombreDoc4.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Se debe indicar un nombre para el archivo 4.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta55.getText().compareTo("") != 0 && txtNombreDoc5.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Se debe indicar un nombre para el archivo 5.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        /* Verificaci√≥n de los nombres de los documentos */
        if (txtRuta11.getText().compareTo("") != 0 && !DocumentoBL.validarNombre(txtNombreDoc1.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(this, "El nombre para el documento 1 ya existe.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta22.getText().compareTo("") != 0 && !DocumentoBL.validarNombre(txtNombreDoc2.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(this, "El nombre para el documento 2 ya existe.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta33.getText().compareTo("") != 0 && !DocumentoBL.validarNombre(txtNombreDoc3.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(this, "El nombre para el documento 3 ya existe.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta44.getText().compareTo("") != 0 && !DocumentoBL.validarNombre(txtNombreDoc4.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(this, "El nombre para el documento 4 ya existe.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (txtRuta55.getText().compareTo("") != 0 && !DocumentoBL.validarNombre(txtNombreDoc5.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(this, "El nombre para el documento 5 ya existe.", "Error Registro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        /* Registramos el documento 1 */
        if (txtRuta11.getText().compareToIgnoreCase("") != 0) {
            File file1 = new File(txtRuta11.getText());
            String contenido = DocumentoBL.obtenerContenido(file1);
            int idDoc = 0;
            try {
                idDoc = Utilitario.generaCodigo("Documento");
                CategoriaBE objCategoria = (CategoriaBE) cboCategoria.getSelectedItem();
                doc1 = new DocumentoBE();
                doc1.setCategoria(objCategoria);
                doc1.setUsuario(objUsuario);
                doc1.setNombre(txtNombreDoc1.getText());
                doc1.setIdDocumento(idDoc);
                doc1.setContenido(contenido);
                doc1.setEstado("activo");
                try {
                    DocumentoBL.registrar(doc1);
                    resDoc1 = "Se registr√≥ el documento 1 safisfactoriamente.";
                } catch (Exception ex) {
                    resDoc1 = "Hubo un error en el registro del documento 1.";
                    Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if (txtRuta22.getText().compareToIgnoreCase("") != 0) {
            File file1 = new File(txtRuta22.getText());
            String contenido = DocumentoBL.obtenerContenido(file1);
            int idDoc = 0;
            try {
                idDoc = Utilitario.generaCodigo("Documento");
                CategoriaBE objCategoria = (CategoriaBE) cboCategoria.getSelectedItem();
                doc2 = new DocumentoBE();
                doc2.setCategoria(objCategoria);
                doc2.setUsuario(objUsuario);
                doc2.setNombre(txtNombreDoc2.getText());
                doc2.setIdDocumento(idDoc);
                doc2.setContenido(contenido);
                doc2.setEstado("activo");
                try {
                    DocumentoBL.registrar(doc2);
                    resDoc2 = "Se registr√≥ el documento 2 safisfactoriamente.";
                } catch (Exception ex) {
                    resDoc2 = "Hubo un error en el registro del documento 2.";
                    Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        /* Registrar documento 3 */
        if (txtRuta33.getText().compareToIgnoreCase("") != 0) {
            File file1 = new File(txtRuta33.getText());
            String contenido = DocumentoBL.obtenerContenido(file1);
            int idDoc = 0;
            try {
                idDoc = Utilitario.generaCodigo("Documento");
                CategoriaBE objCategoria = (CategoriaBE) cboCategoria.getSelectedItem();
                doc3 = new DocumentoBE();
                doc3.setCategoria(objCategoria);
                doc3.setUsuario(objUsuario);
                doc3.setNombre(txtNombreDoc3.getText());
                doc3.setIdDocumento(idDoc);
                doc3.setContenido(contenido);
                doc3.setEstado("activo");
                try {
                    DocumentoBL.registrar(doc3);
                    resDoc3 = "Se registr√≥ el documento 3 safisfactoriamente.";
                } catch (Exception ex) {
                    resDoc3 = "Hubo un error en el registro del documento 3.";
                    Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        /* Registrar documento 4 */
        if (this.txtRuta44.getText().compareToIgnoreCase("") != 0) {
            File file1 = new File(this.txtRuta44.getText());
            String contenido = DocumentoBL.obtenerContenido(file1);
            int idDoc = 0;
            try {
                idDoc = Utilitario.generaCodigo("Documento");
                CategoriaBE objCategoria = (CategoriaBE) cboCategoria.getSelectedItem();
                doc4 = new DocumentoBE();
                doc4.setCategoria(objCategoria);
                doc4.setUsuario(objUsuario);
                doc4.setNombre(txtNombreDoc4.getText());
                doc4.setIdDocumento(idDoc);
                doc4.setContenido(contenido);
                doc4.setEstado("activo");
                try {
                    DocumentoBL.registrar(doc4);
                    resDoc4 = "Se registr√≥ el documento 4 safisfactoriamente.";
                } catch (Exception ex) {
                    resDoc4 = "Hubo error en el registro del documento 4.";
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        /* Registrar docuemnto 5 */
        if (txtRuta55.getText().compareToIgnoreCase("") != 0) {
            File file1 = new File(txtRuta55.getText());
            String contenido = DocumentoBL.obtenerContenido(file1);
            int idDoc = 0;
            try {
                idDoc = Utilitario.generaCodigo("Documento");
                CategoriaBE objCategoria = (CategoriaBE) cboCategoria.getSelectedItem();
                doc5 = new DocumentoBE();
                doc5.setCategoria(objCategoria);
                doc5.setUsuario(objUsuario);
                doc5.setNombre(txtNombreDoc5.getText());
                doc5.setIdDocumento(idDoc);
                doc5.setContenido(contenido);
                doc5.setEstado("activo");
                try {
                    DocumentoBL.registrar(doc5);
                    resDoc5 = "Se registr√≥ el documento 5 safisfactoriamente.";
                } catch (Exception ex) {
                    resDoc5 = "Hubo error en el registro del documento 5.";
                    Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(JDRegistrarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String salida = "";
        if (!resDoc1.equals("")){
            salida += resDoc1;
            salida += "\n";
        }
        if (!resDoc2.equals("")){
            salida += resDoc2;
            salida += "\n";
        }
        if (!resDoc3.equals("")){
            salida += resDoc3;
            salida += "\n";
        }
        if (!resDoc4.equals("")){
            salida += resDoc4;
            salida += "\n";
        }
        if (!resDoc5.equals("")){
            salida += resDoc5;
            salida += "\n";
        }
        if (!resDoc1.equals("") || !resDoc2.equals("") || !resDoc3.equals("") || !resDoc4.equals("") || !resDoc5.equals("")) {
            JOptionPane.showMessageDialog(this, salida, "Resultado Registro", JOptionPane.INFORMATION_MESSAGE);
        }
        this.dispose();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtRuta11.setText("");
        txtRuta22.setText("");
        txtRuta33.setText("");
        txtRuta44.setText("");
        txtRuta55.setText("");
        txtNombreDoc1.setText("");
        txtNombreDoc2.setText("");
        txtNombreDoc3.setText("");
        txtNombreDoc4.setText("");
        txtNombreDoc5.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnCargarDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarDirectorioActionPerformed


        JFileChooser fchooser = new JFileChooser();
        fchooser.setApproveButtonText("Cargar");
        ExtensionValida ext = new ExtensionValida(true);
        fchooser.setFileFilter(ext);
        fchooser.setAcceptAllFileFilterUsed(false);
        fchooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int retVal = fchooser.showOpenDialog(this);
        if (retVal == fchooser.APPROVE_OPTION) {
            String ruta = fchooser.getSelectedFile().getAbsolutePath();
            File dir = new File(ruta);
            File[] nomArch = dir.listFiles();
            ArrayList<File> alstArch = new ArrayList<File>();
            int cnt = 0;
            for (int i = 0; i < nomArch.length; ++i) {
                String extension = Utilitario.getExtension(nomArch[i]);
                if (extension != null && (extension.equals("txt") || extension.equals("doc"))) {
                    alstArch.add(nomArch[i]);
                    cnt++;
                }
            }
            if (cnt == 0) {
                JOptionPane.showMessageDialog(this, "El directorio no contiene documentos .doc o .txt", "Cargar Documentos", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            // Validacion del nombre de los archivos a subir
            for (int i = 0; i < alstArch.size(); ++i) {
                if (!DocumentoBL.validarNombre(alstArch.get(i).getName().toUpperCase())) {
                    JOptionPane.showMessageDialog(this, "El nombre " + alstArch.get(i).getName() + " ya existe.", "Error Registro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Obtenemos la categoria seleccionada
            CategoriaBE objCategoria = (CategoriaBE) cboCategoria.getSelectedItem();
            JDCargaDocumentos cargaDoc = new JDCargaDocumentos(alstArch, objCategoria, objUsuario);
            cargaDoc.setModal(false);
            //JDCargaDocumentos cargaDoc = new JDCargaDocumentos();

            cargaDoc.setLocationRelativeTo(this);
            //cargaDoc.setModal(true);
            cargaDoc.setVisible(true);

            cargaDoc.cargarDocumentos(objCategoria, objUsuario);
        //this.dispose();
        }
    }//GEN-LAST:event_btnCargarDirectorioActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar1;
    private javax.swing.JButton btnBuscar2;
    private javax.swing.JButton btnBuscar3;
    private javax.swing.JButton btnBuscar4;
    private javax.swing.JButton btnBuscar5;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCargarDirectorio;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox cboCategoria;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblNombre1;
    private javax.swing.JLabel lblNombre2;
    private javax.swing.JLabel lblNombre3;
    private javax.swing.JLabel lblNombre4;
    private javax.swing.JLabel lblNombre5;
    private javax.swing.JLabel lblPropietario;
    private javax.swing.JLabel lblRuta11;
    private javax.swing.JLabel lblRuta22;
    private javax.swing.JLabel lblRuta33;
    private javax.swing.JLabel lblRuta44;
    private javax.swing.JLabel lblRuta55;
    private javax.swing.JPanel pnlDatosGen;
    private javax.swing.JPanel pnlDatosParticulares;
    private javax.swing.JPanel pnlFecha;
    private javax.swing.JTextField txtNombreDoc1;
    private javax.swing.JTextField txtNombreDoc2;
    private javax.swing.JTextField txtNombreDoc3;
    private javax.swing.JTextField txtNombreDoc4;
    private javax.swing.JTextField txtNombreDoc5;
    private javax.swing.JTextField txtPropietario;
    private javax.swing.JTextField txtRuta11;
    private javax.swing.JTextField txtRuta22;
    private javax.swing.JTextField txtRuta33;
    private javax.swing.JTextField txtRuta44;
    private javax.swing.JTextField txtRuta55;
    // End of variables declaration//GEN-END:variables

    class ExtensionValida extends FileFilter {
        boolean opcion;
        ExtensionValida(boolean soloDir) {
            opcion = soloDir;
        }
        public String getExtension(File f) {
            String ext = null;
            String s = f.getName();
            int i = s.lastIndexOf('.');

            if (i > 0 && i < s.length() - 1) {
                ext = s.substring(i + 1).toLowerCase();
            }
            return ext;
        }
        @Override
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return true;
            }

            if (!opcion) {
                String ext = this.getExtension(f);
                if (ext != null && (ext.equals("txt") || ext.equals("doc"))) {
                    return true;
                }
            }
            return false;
        }
        @Override
        public String getDescription() {
            if (opcion) {
                return "Solo directorios";
            }
            return "Solo .txt y .doc";
        }
    }
}
