/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Documento2.java
 *
 * Created on 01/05/2010, 03:23:51 PM
 */
package antiplagium.view;

import antiplagium.BE.CategoriaBE;
import antiplagium.BE.DocumentoBE;
import antiplagium.BE.GestorTiposOperacion;
import antiplagium.BE.UsuarioBE;
import antiplagium.BE.Utilitario;
import antiplagium.BL.CategoriaBL;
import antiplagium.BL.DocumentoBL;
import antiplagium.BL.UsuarioBL;
import antiplagium.DAL.ConexionJDBC;
import antiplagium.DAO.CategoriaDAO;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.postgresql.core.Logger;

/**
 *
 * @author PATTY
 */
public class JDBuscarDocumento extends JDialog {

    private ArrayList<DocumentoBE> alstDocumentos = new ArrayList<DocumentoBE>();
    private CategoriaBL objCategoriaBL;
    private UsuarioBE objUsuario;
    private ArrayList<CategoriaBE> alstCategorias;
    private int tipo;
    public DocumentoBE objDocSel = null;
    public ArrayList<DocumentoBE> alstSeleccionado = new ArrayList<DocumentoBE>();

    /** Creates new form Documento2 */
    public JDBuscarDocumento() throws FileNotFoundException, IOException, SQLException {
        initComponents();
        tipo = 0; /* Indica que es llamada para el gestionar Documentos*/
        cboEstado.addItem("Todos");
        cboEstado.addItem("activo");
        cboEstado.addItem("inactivo");
        btnAceptar.setVisible(false);
        objCategoriaBL = new CategoriaBL();
        CategoriaBE objCategoriaTemporal = new CategoriaBE();
        objCategoriaTemporal.setIdCategoria(0);
        objCategoriaTemporal.setNombre("Todas");
        alstCategorias = objCategoriaBL.buscarCategoria("", "");
        alstCategorias.add(0, objCategoriaTemporal);
        int cantidadCategorias = alstCategorias.size();
        for (int i = 0; i < cantidadCategorias; i++) {
            cboCategoria.addItem(alstCategorias.get(i).getNombre());
        }
    }

    public JDBuscarDocumento(UsuarioBE objUsuario, int tipo) throws FileNotFoundException, IOException, SQLException {
        initComponents();
        this.tipo = tipo;
        if (this.tipo == 0) {
            btnSeleccion.setVisible(false);

            tblDocumentos.getColumnModel().removeColumn(tblDocumentos.getColumnModel().getColumn(5));
        } else if (this.tipo == 2) {
            btnSeleccion.setVisible(false);

            tblDocumentos.getColumnModel().removeColumn(tblDocumentos.getColumnModel().getColumn(5));
            btnAceptar.setVisible(false);
        }
        cboEstado.addItem("Todos");
        cboEstado.addItem("activo");
        cboEstado.addItem("inactivo");
        this.objUsuario = objUsuario;
        objCategoriaBL = new CategoriaBL();
        CategoriaBE objCategoriaTemporal = new CategoriaBE();
        objCategoriaTemporal.setIdCategoria(0);
        objCategoriaTemporal.setNombre("Todas");
        alstCategorias = objCategoriaBL.buscarCategoria("", "");
        alstCategorias.add(0, objCategoriaTemporal);
        int cantidadCategorias = alstCategorias.size();
        for (int i = 0; i < cantidadCategorias; i++) {
            cboCategoria.addItem(alstCategorias.get(i));
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        pnlResultadoBusqueda = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocumentos = new javax.swing.JTable();
        btnSeleccion = new javax.swing.JButton();
        pnlBuscarDocumento = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        lblCategoria = new javax.swing.JLabel();
        txtNombre = new javax.swing.JFormattedTextField();
        cboCategoria = new javax.swing.JComboBox();
        btnBuscar = new javax.swing.JButton();
        lblIdUsuario = new javax.swing.JLabel();
        txtIdUsuario = new javax.swing.JFormattedTextField();
        lblEstado = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox();
        btnCancelar = new javax.swing.JButton();
        btnVerContenido = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        setTitle("Búsqueda Documentos");
        setName(""); // NOI18N
        setResizable(false);

        pnlResultadoBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultados Búsqueda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N

        tblDocumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nombre", "Categoría ", "Propietario", "Estado", "Seleccionado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDocumentos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblDocumentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblDocumentos);

        btnSeleccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/seleccionar.png"))); // NOI18N
        btnSeleccion.setText("Seleccionar todo");
        btnSeleccion.setMaximumSize(new java.awt.Dimension(135, 35));
        btnSeleccion.setMinimumSize(new java.awt.Dimension(135, 35));
        btnSeleccion.setPreferredSize(new java.awt.Dimension(135, 35));
        btnSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlResultadoBusquedaLayout = new javax.swing.GroupLayout(pnlResultadoBusqueda);
        pnlResultadoBusqueda.setLayout(pnlResultadoBusquedaLayout);
        pnlResultadoBusquedaLayout.setHorizontalGroup(
            pnlResultadoBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlResultadoBusquedaLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(pnlResultadoBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        pnlResultadoBusquedaLayout.setVerticalGroup(
            pnlResultadoBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlResultadoBusquedaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlBuscarDocumento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Búsqueda de Documento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 0, 255))); // NOI18N
        pnlBuscarDocumento.setForeground(new java.awt.Color(0, 0, 255));
        pnlBuscarDocumento.setName("Búsqueda"); // NOI18N
        pnlBuscarDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pnlBuscarDocumentoFocusGained(evt);
            }
        });

        lblNombre.setText("Nombre:");

        lblCategoria.setText("Categoría:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setMaximumSize(new java.awt.Dimension(135, 35));
        btnBuscar.setMinimumSize(new java.awt.Dimension(135, 35));
        btnBuscar.setName("btnBuscar"); // NOI18N
        btnBuscar.setPreferredSize(new java.awt.Dimension(135, 35));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblIdUsuario.setText("ID Propietario");

        txtIdUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdUsuarioKeyReleased(evt);
            }
        });

        lblEstado.setText("Estado");

        javax.swing.GroupLayout pnlBuscarDocumentoLayout = new javax.swing.GroupLayout(pnlBuscarDocumento);
        pnlBuscarDocumento.setLayout(pnlBuscarDocumentoLayout);
        pnlBuscarDocumentoLayout.setHorizontalGroup(
            pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarDocumentoLayout.createSequentialGroup()
                .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscarDocumentoLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblCategoria)
                            .addComponent(lblIdUsuario)
                            .addComponent(lblEstado))
                        .addGap(54, 54, 54)
                        .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIdUsuario)
                            .addComponent(cboCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)))
                    .addGroup(pnlBuscarDocumentoLayout.createSequentialGroup()
                        .addGap(201, 201, 201)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        pnlBuscarDocumentoLayout.setVerticalGroup(
            pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscarDocumentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBuscarDocumentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setMaximumSize(new java.awt.Dimension(135, 35));
        btnCancelar.setMinimumSize(new java.awt.Dimension(135, 35));
        btnCancelar.setPreferredSize(new java.awt.Dimension(135, 35));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnVerContenido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/buscar.png"))); // NOI18N
        btnVerContenido.setText("Ver Contenido");
        btnVerContenido.setMaximumSize(new java.awt.Dimension(135, 35));
        btnVerContenido.setMinimumSize(new java.awt.Dimension(135, 35));
        btnVerContenido.setPreferredSize(new java.awt.Dimension(135, 35));
        btnVerContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerContenidoActionPerformed(evt);
            }
        });

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setMaximumSize(new java.awt.Dimension(135, 35));
        btnAceptar.setMinimumSize(new java.awt.Dimension(135, 35));
        btnAceptar.setPreferredSize(new java.awt.Dimension(135, 35));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nuevo.png"))); // NOI18N
        jMenu1.setText("Nuevo");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu1MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/modificar.png"))); // NOI18N
        jMenu2.setText("Modificar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu2MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/Eliminar - 16.png"))); // NOI18N
        jMenu3.setText("Eliminar");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu3MousePressed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlResultadoBusqueda, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBuscarDocumento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVerContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(pnlBuscarDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlResultadoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVerContenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBuscarDocumento.getAccessibleContext().setAccessibleName("Búsqueda");
        pnlBuscarDocumento.getAccessibleContext().setAccessibleDescription("Búsqueda");

        getAccessibleContext().setAccessibleName("Búsqueda");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        String objEstado;
        CategoriaBE objCategoria = null;
        UsuarioBE objUsuario = null;
        /* Si la categoria es todas el objeto debe ser nulo, no especificado */

        objCategoria = (CategoriaBE) this.cboCategoria.getSelectedItem();
        if (objCategoria.getNombre().compareTo("Todas") == 0) {
            objCategoria = null;
        }
        /* Si se especifico un IdUsuario se crea el usuario */
        if (this.txtIdUsuario.getText().compareTo("") != 0) {
            objUsuario = new UsuarioBE();
            objUsuario.setIdUsuario(Integer.parseInt(this.txtIdUsuario.getText()));
        }
        DocumentoBE objDocumento = new DocumentoBE();
        objDocumento.setUsuario(objUsuario);
        objDocumento.setCategoria(objCategoria);
        String temp = "";
        for (int i = 0; i < this.txtNombre.getText().length(); ++i) {
            if (this.txtNombre.getText().charAt(i) != '\'') {
                temp += this.txtNombre.getText().charAt(i);
            }
        }
        objDocumento.setNombre(temp);
        objEstado = (String) this.cboEstado.getSelectedItem();
        if (objEstado.compareTo("Todos") == 0) {
            objEstado = "";
        }
        objDocumento.setEstado(objEstado);
        try {
            alstDocumentos = DocumentoBL.ListarDocs(objDocumento);
            /* Obtenemos el modelo */
            DefaultTableModel tmp = (DefaultTableModel) tblDocumentos.getModel();
            /* Limpiamos la tabla */
            for (int i = tmp.getRowCount() - 1; i >= 0; --i) {
                tmp.removeRow(i);
            }
            /* Llenamos la grilla */
            int cnt = 0;
            UsuarioBL objUsuarioBL = new UsuarioBL();
            if (tipo == 0) {
                for (int i = 0; i < alstDocumentos.size(); ++i) {
                    if (objEstado.equals("") || alstDocumentos.get(i).getEstado().compareTo(objEstado) == 0) {
                        UsuarioBE tmpUsuario = objUsuarioBL.getUsuarioBE(alstDocumentos.get(i).getUsuario().getIdUsuario());
                        alstDocumentos.get(i).setUsuario(tmpUsuario);
                        Object[] nuevo = {alstDocumentos.get(i).getIdDocumento(), alstDocumentos.get(i).getNombre(), alstDocumentos.get(i).getCategoria().getNombre(), alstDocumentos.get(i).getUsuario().getNombres(), alstDocumentos.get(i).getEstado()};
                        tmp.addRow(nuevo);
                        cnt++;
                    }
                }
            } else {
                for (int i = 0; i < alstDocumentos.size(); ++i) {
                    if (objEstado.equals("") || alstDocumentos.get(i).getEstado().compareTo(objEstado) == 0) {
                        UsuarioBE tmpUsuario = objUsuarioBL.getUsuarioBE(alstDocumentos.get(i).getUsuario().getIdUsuario());
                        alstDocumentos.get(i).setUsuario(tmpUsuario);
                        Object[] nuevo = {alstDocumentos.get(i).getIdDocumento(), alstDocumentos.get(i).getNombre(), alstDocumentos.get(i).getCategoria().getNombre(), alstDocumentos.get(i).getUsuario().getNombres(), alstDocumentos.get(i).getEstado(), Boolean.FALSE};
                        tmp.addRow(nuevo);
                        cnt++;
                    }
                }
            }
            if (cnt == 0) {
                JOptionPane.showMessageDialog(this, "La búsqueda no encontro ningún resultado.", "Buscar Documento", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (FileNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
        }

}//GEN-LAST:event_btnBuscarActionPerformed

    private void pnlBuscarDocumentoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pnlBuscarDocumentoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlBuscarDocumentoFocusGained

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jMenu1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MousePressed
        ArrayList<CategoriaBE> alstTemp = new ArrayList<CategoriaBE>();
        for (int i=0; i < alstCategorias.size(); ++i){
            alstTemp.add(alstCategorias.get(i));
        }
        JDRegistrarDocumento registrarDocumentos = new JDRegistrarDocumento(objUsuario, alstTemp);
        registrarDocumentos.setTitle("Registrar Documento");
        registrarDocumentos.setModal(true);
        registrarDocumentos.setLocationRelativeTo(this);
        registrarDocumentos.setVisible(true);
    }//GEN-LAST:event_jMenu1MousePressed

    private void jMenu2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MousePressed
        int idx = tblDocumentos.getSelectedRow();
        if (idx < 0) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún documento.", "Error Modificar", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            JDModificarDocumento vModificarDoc = null;
            try {
                if (objUsuario.getIdUsuario() != alstDocumentos.get(idx).getUsuario().getIdUsuario()) {
                    JOptionPane.showMessageDialog(this, "Debe ser propietario del documento para modificar sus datos", "Error Modificar Documento", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                //alstDocumentos.get(idx).setUsuario(objUsuario);
                System.out.println(this.alstCategorias.size());
                ArrayList<CategoriaBE> alsrTemp = new ArrayList<CategoriaBE>();
                for (int i=0; i < alstCategorias.size(); ++i){
                    alsrTemp.add( alstCategorias.get(i) );
                }
                vModificarDoc = new JDModificarDocumento(alstDocumentos.get(idx), alsrTemp);
            } catch (FileNotFoundException ex) {
                java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }
            vModificarDoc.setTitle("Modificar Documento");
            vModificarDoc.setModal(true);
            vModificarDoc.setLocationRelativeTo(this);
            vModificarDoc.setVisible(true);
        }
    }//GEN-LAST:event_jMenu2MousePressed

    private void btnVerContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerContenidoActionPerformed
        int idx = tblDocumentos.getSelectedRow();
        if (idx >= 0) {
            String contenido = alstDocumentos.get(idx).getContenido();
            JDVisualizarDocumento vis = new JDVisualizarDocumento(contenido);
            vis.setModal(true);
            vis.setLocationRelativeTo(this);
            vis.setTitle("Mostrar Contenido");
            vis.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún documento.", "Error Mostrar Contenido", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnVerContenidoActionPerformed

    private void jMenu3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MousePressed
        // TODO add your handling code here:
        if (tblDocumentos.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un documento antes", "Error Eliminar", JOptionPane.ERROR_MESSAGE);
        }
        else {
            if (alstDocumentos.get(this.tblDocumentos.getSelectedRow()).getUsuario().getIdUsuario() != this.objUsuario.getIdUsuario()) {
                JOptionPane.showMessageDialog(this, "Debe ser el propietario para eliminar el documento.", "Error Eliminar", JOptionPane.ERROR_MESSAGE);
                return;
            }
            DocumentoBL objDocumentoBL = new DocumentoBL();
            try {
                ConexionJDBC.abrirConexion();
                DocumentoBE objDocumentoTemporal = this.alstDocumentos.get(this.tblDocumentos.getSelectedRow());
                if (objDocumentoBL.eliminar(objDocumentoTemporal.getIdDocumento())){
                    JOptionPane.showMessageDialog(this, "El Documento se elimino con éxito.", "Eliminar", JOptionPane.INFORMATION_MESSAGE);
                    String descripcion = GestorTiposOperacion.getTipoOperacion("eliminacion") + "\n";
                    descripcion += "Registro eliminado:\n" + objDocumentoTemporal.getNombre() + "\n";
                    descripcion += "Categoria: " + objDocumentoTemporal.getCategoria().getNombre() + "\n";
                    descripcion += "Estado: inactivo\n";
                    JFBase.setOperacion(this.getName(), GestorTiposOperacion.getTipoOperacion("eliminacion"), descripcion);
                    JFBase.registrarOperacion();
                    ConexionJDBC.cerrarConexion();
                }
                else {
                    JOptionPane.showMessageDialog(this, "Existió un error en la eliminación del documento.", "Eliminar", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(JDBuscarDocumento.class.getName()).log(Level.SEVERE, null, ex);
            }
          
        }
    }//GEN-LAST:event_jMenu3MousePressed

    private void txtIdUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdUsuarioKeyReleased
        // TODO add your handling code here:
        Character caracter = new Character(evt.getKeyChar());
        if (!Utilitario.esDigito(caracter)) {
            String texto = "";
            for (int i = 0; i < txtIdUsuario.getText().length(); i++) {
                if (Utilitario.esDigito(new Character(txtIdUsuario.getText().charAt(i)))) {
                    texto += txtIdUsuario.getText().charAt(i);
                }
            }
            txtIdUsuario.setText(texto);
            txtIdUsuario.getToolkit().beep();
        }
    }//GEN-LAST:event_txtIdUsuarioKeyReleased


    /*Eliminar*/
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        int idx = tblDocumentos.getSelectedRow();
        if (tipo == 1) {
            alstSeleccionado = new ArrayList<DocumentoBE>();

            for (int i = 0; i < tblDocumentos.getRowCount(); ++i) {
                Boolean tmp = (Boolean) tblDocumentos.getValueAt(i, 5);
                if (tmp.booleanValue() == true) {
                    alstSeleccionado.add(this.alstDocumentos.get(i));
                }
            }
            if (alstSeleccionado.size() == 0) {
                JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún documento.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if (idx >= 0) {
            objDocSel = alstDocumentos.get(idx);
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún documento.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }


        this.setVisible(false);
}//GEN-LAST:event_btnAceptarActionPerformed

    private void btnSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < tblDocumentos.getRowCount(); ++i) {
            tblDocumentos.setValueAt(Boolean.TRUE, i, 5);
        }
    }//GEN-LAST:event_btnSeleccionActionPerformed

    public String getNombreDocSeleccionado() {
        return selectedDoc;
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSeleccion;
    private javax.swing.JButton btnVerContenido;
    private javax.swing.JComboBox cboCategoria;
    private javax.swing.JComboBox cboEstado;
    private javax.swing.JList jList1;
    public javax.swing.JMenu jMenu1;
    public javax.swing.JMenu jMenu2;
    public javax.swing.JMenu jMenu3;
    public javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblIdUsuario;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JPanel pnlBuscarDocumento;
    private javax.swing.JPanel pnlResultadoBusqueda;
    private javax.swing.JTable tblDocumentos;
    private javax.swing.JFormattedTextField txtIdUsuario;
    private javax.swing.JFormattedTextField txtNombre;
    // End of variables declaration//GEN-END:variables
    private String selectedDoc;

    public void soloActivo() {
        cboEstado.setSelectedIndex(1);
        cboEstado.setEnabled(false);
    }
}
